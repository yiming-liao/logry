"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[947],{1003:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"architecture/formatter","title":"Formatter","description":"The Formatter takes normalized log data and turns it into readable, styled output.","source":"@site/docs/architecture/formatter.md","sourceDirName":"architecture","slug":"/architecture/formatter","permalink":"/logry/docs/architecture/formatter","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/architecture/formatter.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Formatter"},"sidebar":"tutorialSidebar","previous":{"title":"Normalizer","permalink":"/logry/docs/architecture/normalizer"},"next":{"title":"Handlers","permalink":"/logry/docs/architecture/handlers"}}');var r=s(4848),i=s(8453);const l={sidebar_position:5,title:"Formatter"},d=" Formatter",o={},c=[{value:"What it does",id:"-what-it-does",level:3},{value:"Customization",id:"-customization",level:3},{value:"Platform Awareness",id:"-platform-awareness",level:3}];function a(e){const t={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"-formatter",children:[(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Artist%20Palette.png",alt:"Artist Palette",width:"36",height:"36"})," Formatter"]})}),"\n",(0,r.jsxs)(t.p,{children:["The Formatter takes normalized log data and turns it into readable, styled output.",(0,r.jsx)(t.br,{}),"\n","It supports optional color coding to make logs clearer and easier to scan."]}),"\n",(0,r.jsxs)(t.h3,{id:"-what-it-does",children:[(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," What it does"]}),"\n",(0,r.jsxs)(t.p,{children:["The Formatter receives normalized data and produces formatted strings (or structured content) ready for display.",(0,r.jsx)(t.br,{}),"\n","Handled fields include:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"timestamp"}),"\n",(0,r.jsx)(t.li,{children:"id"}),"\n",(0,r.jsx)(t.li,{children:"level"}),"\n",(0,r.jsx)(t.li,{children:"scope"}),"\n",(0,r.jsx)(t.li,{children:"message"}),"\n",(0,r.jsx)(t.li,{children:"meta"}),"\n",(0,r.jsx)(t.li,{children:"context"}),"\n",(0,r.jsxs)(t.li,{children:["pid ",(0,r.jsxs)("sub",{children:["(",(0,r.jsx)(t.em,{children:"Node.js only"}),")"]})]}),"\n",(0,r.jsxs)(t.li,{children:["hostname ",(0,r.jsxs)("sub",{children:["(",(0,r.jsx)(t.em,{children:"Node.js only"}),")"]})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Each part has its own formatter. All formatters support optional style customizations and can be overridden with custom logic."}),"\n",(0,r.jsxs)(t.h3,{id:"-customization",children:[(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Customization"]}),"\n",(0,r.jsx)(t.p,{children:"Common format options apply to all formatter parts and include:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"hide?: boolean;"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"prefix?: string;"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"suffix?: string;"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"lineBreaks?: number;"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"spaceAfter?: number;"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Every formatter supports a customFormatter function, letting you override default behavior:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'message: {\n  customFormatter: ({ fieldValue, raw }) => ({\n    fieldValue: `! ${fieldValue}`, // e.g., "msg" \u2192 "! msg"\n    withAnsiStyle: `\\x1b[42m${fieldValue}`, // Used in Node.js when `useAnsiStyle` is enabled\n    cssStyle: `border: 1px solid blue`, // Used in browsers for console styling\n  }),\n},\n'})}),"\n",(0,r.jsx)(t.p,{children:"You can also fine-tune behavior using extra options per part."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Platform"}),(0,r.jsx)(t.th,{children:"Part"}),(0,r.jsx)(t.th,{children:"Extra Options Available"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Node.js"})}),(0,r.jsx)(t.td,{children:"ALL"}),(0,r.jsx)(t.td,{children:"ansiStyle, useAnsiStyle"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"scope"})}),(0,r.jsx)(t.td,{children:"showOnlyLatest, separator"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"meta"})}),(0,r.jsxs)(t.td,{children:["format, indent, all InspectOptions (for format: ",(0,r.jsx)(t.strong,{children:'"raw"'}),")"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"context"})}),(0,r.jsxs)(t.td,{children:["format, indent, all InspectOptions (for format: ",(0,r.jsx)(t.strong,{children:'"raw"'}),")"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Browser"})}),(0,r.jsx)(t.td,{children:"ALL"}),(0,r.jsx)(t.td,{children:"cssStyle"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"scope"})}),(0,r.jsx)(t.td,{children:"showOnlyLatest, separator"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"meta"})}),(0,r.jsx)(t.td,{children:"format, indent"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"context"})}),(0,r.jsx)(t.td,{children:"format, indent"})]})]})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," InspectOptions refers to the options supported by Node.js ",(0,r.jsx)(t.a,{href:"https://nodejs.org/api/util.html#utilinspectobject-options",children:"util.inspect"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.h3,{id:"-platform-awareness",children:[(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Platform Awareness"]}),"\n",(0,r.jsxs)(t.p,{children:["Formatter behavior automatically adapts to the runtime platform, whether it is Node.js or the browser.",(0,r.jsx)(t.br,{}),"\n","This ensures that log outputs remain clear, styled, and consistent across environments."]}),"\n",(0,r.jsx)(t.p,{children:"The output behavior varies depending on the platform:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Platform"}),(0,r.jsx)(t.th,{children:"Format output"}),(0,r.jsx)(t.th,{children:"Styling mechanism"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Node.js"})}),(0,r.jsxs)(t.td,{children:["Returns ",(0,r.jsx)(t.code,{children:"{ fieldValue: string, withAnsiStyle?: string }"})]}),(0,r.jsxs)(t.td,{children:["Uses ANSI escape codes (e.g. ",(0,r.jsx)(t.strong,{children:"\\x1b[31m"}),")"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Browser"})}),(0,r.jsxs)(t.td,{children:["Returns ",(0,r.jsx)(t.code,{children:"{ fieldValue: string, cssStyle?: string }"})]}),(0,r.jsx)(t.td,{children:"Uses %c and inline CSS"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Edge"})}),(0,r.jsxs)(t.td,{children:["Returns ",(0,r.jsx)(t.code,{children:"{ fieldValue: string }"})]}),(0,r.jsx)(t.td,{children:"Just plain text"})]})]})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:'In the browser, the final result will be used with console.log("%c...%c...%c...", styleA, styleB, ...), allowing for per-part CSS styling.'}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"For example:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Timestamps appear as full ISO strings with ANSI colors in Node.js and as simplified text styled with CSS in the browser."}),"\n",(0,r.jsx)(t.li,{children:'Meta shows full depth in Node.js, but in browsers it gets a prefix like "META | ".'}),"\n",(0,r.jsx)(t.li,{children:"Some fields (like level) can be hidden in one platform but shown in another."}),"\n"]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["You can define environment-specific behavior using the formatterConfig structure.",(0,r.jsx)(t.br,{}),"\n","It can be set globally in ",(0,r.jsx)(t.strong,{children:"logry(...)"}),", scoped to a ",(0,r.jsx)(t.strong,{children:"logger.child(...)"}),", or ",(0,r.jsx)(t.strong,{children:"overridden per log method"}),":"]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:'const logger = logry({\n  // ...\n  formatterConfig: {\n    node: {\n      timestamp: {\n        ansiStyle: "\\x1b[33m", // Yellow text for timestamp in Node.js\n      },\n      meta: {\n        depth: null, // Show full depth for meta in Node.js\n      },\n      lineBreaksAfter: 2, // Add extra spacing after logs\n    },\n    browser: {\n      timestamp: {\n        cssStyle: "font-weight: bold; color: orange;", // Bold orange timestamp in browsers\n      },\n      meta: {\n        prefix: "META | ", // Prefix meta with label in browsers\n      },\n      level: {\n        hide: true, // Hide level field in browsers\n      },\n    },\n  },\n  // ...\n});\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>d});var n=s(6540);const r={},i=n.createContext(r);function l(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);