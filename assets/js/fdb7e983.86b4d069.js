"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[6781],{1345:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"modules/transporter","title":"Transporter","description":"The Transporter is the final step in the logging pipeline \u2014 responsible for delivering the formatted log to its destination.","source":"@site/docs/modules/transporter.md","sourceDirName":"modules","slug":"/modules/transporter","permalink":"/logry/docs/modules/transporter","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/modules/transporter.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Formatter","permalink":"/logry/docs/modules/formatter"},"next":{"title":"Advanced & Tools","permalink":"/logry/docs/category/advanced--tools"}}');var n=r(4848),o=r(8453);const i={sidebar_position:3},l="Transporter",d={},a=[{value:"Built-in Transporters",id:"built-in-transporters",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"transporter",children:"Transporter"})}),"\n",(0,n.jsxs)(t.p,{children:["The Transporter is the final step in the logging pipeline \u2014 responsible for delivering the formatted log to its destination.",(0,n.jsx)(t.br,{}),"\n","After a log is normalized and formatted, the Transporter takes over and outputs it \u2014 whether that\u2019s the terminal in Node.js, or the DevTools console in a browser."]}),"\n",(0,n.jsx)(t.h3,{id:"built-in-transporters",children:"Built-in Transporters"}),"\n",(0,n.jsx)(t.p,{children:"Logry comes with two built-in transporters, automatically selected based on your runtime environment:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Platform"}),(0,n.jsx)(t.th,{children:"Transporter"}),(0,n.jsx)(t.th,{children:"Styling mechanism"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Node.js"})}),(0,n.jsx)(t.td,{children:"NodeConsoleTransporter"}),(0,n.jsx)(t.td,{children:"Prints logs to the terminal using ANSI styles"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Browser"})}),(0,n.jsx)(t.td,{children:"BrowserConsoleTransporter"}),(0,n.jsx)(t.td,{children:"Prints logs to the DevTools console using CSS styles"})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["These built-ins are designed to be minimal yet effective \u2014 providing clean and consistent output across platforms.",(0,n.jsx)(t.br,{}),"\n","\ud83c\udfaf In future versions, Logry will support custom transporters for advanced use cases like file writing, remote logging, or API-based delivery."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var s=r(6540);const n={},o=s.createContext(n);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);