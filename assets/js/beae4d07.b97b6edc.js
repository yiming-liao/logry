"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[9913],{7586:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"core-concepts/logger-core","title":"Logger Core","description":"The core engine responsible for managing log levels, shared identity (id), and optional configurations for formatting, normalization, and handlers.","source":"@site/docs/core-concepts/logger-core.md","sourceDirName":"core-concepts","slug":"/core-concepts/logger-core","permalink":"/logry/docs/core-concepts/logger-core","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/core-concepts/logger-core.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Child Loggers","permalink":"/logry/docs/core-concepts/child-loggers"},"next":{"title":"Logger Handlers and Tasks","permalink":"/logry/docs/core-concepts/logger-handlers-and-tasks"}}');var t=o(4848),s=o(8453);const i={sidebar_position:3},l="Logger Core",c={},a=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"logger-core",children:"Logger Core"})}),"\n",(0,t.jsx)(n.p,{children:"The core engine responsible for managing log levels, shared identity (id), and optional configurations for formatting, normalization, and handlers."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Multiple logger instances can share a single core by specifying the same id, enabling centralized and synchronized log level management across instances."}),"\n",(0,t.jsxs)(n.li,{children:["It supports dynamic runtime control of log verbosity:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"setLevel(level)"}),": updates the active log level"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"resetLevel()"}),": restore to the initial log level"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This allows flexible adjustment of log output without needing to recreate logger instances."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var r=o(6540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);