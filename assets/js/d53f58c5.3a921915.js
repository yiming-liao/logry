"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[286],{7316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"debugging-and-tools/development-mode-detection","title":"Development Mode Detection","description":"This function detects whether the runtime is in development mode.","source":"@site/docs/debugging-and-tools/development-mode-detection.md","sourceDirName":"debugging-and-tools","slug":"/debugging-and-tools/development-mode-detection","permalink":"/logry/docs/debugging-and-tools/development-mode-detection","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/debugging-and-tools/development-mode-detection.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Development Mode Detection"},"sidebar":"tutorialSidebar","previous":{"title":"Devtools","permalink":"/logry/docs/debugging-and-tools/devtools"},"next":{"title":"\u2728 Examples","permalink":"/logry/docs/category/-examples"}}');var i=n(4848),s=n(8453);const r={sidebar_position:2,title:"Development Mode Detection"},d=" Development Mode Detection",l={},c=[];function a(e){const t={br:"br",code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"-development-mode-detection",children:[(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Travel%20and%20places/Construction.png",alt:"Construction",width:"36",height:"36"})," Development Mode Detection"]})}),"\n",(0,i.jsxs)(t.p,{children:["This function detects whether the runtime is in development mode.",(0,i.jsx)(t.br,{}),"\n","It is primarily used to control internal logging and error reporting within the library, such as internal-log and internal-error messages."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In ",(0,i.jsx)(t.code,{children:"Node.js"}),", it checks the NODE_ENV environment variable:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns true if ",(0,i.jsx)(t.code,{children:"NODE_ENV"})," is not set to 'production'."]}),"\n",(0,i.jsxs)(t.li,{children:["Defaults to true (development) if ",(0,i.jsx)(t.code,{children:"NODE_ENV"})," is undefined."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In ",(0,i.jsx)(t.code,{children:"Browsers"}),", it checks the global flag ",(0,i.jsx)(t.code,{children:"__LOGRY_DEV__"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Returns true if the flag is truthy."}),"\n",(0,i.jsx)(t.li,{children:"Defaults to false (production) if undefined."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This setup assumes Node defaults to development mode for easier local testing, while browsers default to production to avoid unnecessary debug logs."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);