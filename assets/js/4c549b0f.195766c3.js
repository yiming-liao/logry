"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[380],{1117:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/log-methods","title":"Log Methods","description":"Common log methods available on the logger instance, such as fatal(), error(), warn(), info(), etc.","source":"@site/docs/api-reference/log-methods.md","sourceDirName":"api-reference","slug":"/api-reference/log-methods","permalink":"/logry/docs/api-reference/log-methods","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/api-reference/log-methods.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Log Methods"},"sidebar":"tutorialSidebar","previous":{"title":"logry()","permalink":"/logry/docs/api-reference/logry"},"next":{"title":"Normalizer Config","permalink":"/logry/docs/api-reference/normalizer-config"}}');var o=n(4848),s=n(8453);const i={sidebar_position:2,title:"Log Methods"},d=" Log Methods",c={},l=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"LogRuntimeOptions",id:"logruntimeoptions",level:3}];function a(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsxs)(r.h1,{id:"-log-methods",children:[(0,o.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"36",height:"36"})," Log Methods"]})}),"\n",(0,o.jsxs)(r.p,{children:["Common log methods available on the logger instance, such as ",(0,o.jsx)(r.code,{children:"fatal()"}),", ",(0,o.jsx)(r.code,{children:"error()"}),", ",(0,o.jsx)(r.code,{children:"warn()"}),", ",(0,o.jsx)(r.code,{children:"info()"}),", etc."]}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.code,{children:"logry(options?: BoundLogMethod): void"})}),"\n"]}),"\n",(0,o.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:'const logger = logry();\n\nlogger.error(\n  "An error msg.",\n  { userId: "123" },\n  {\n    scope: "payment",\n    context: { orderId: "321" },\n    normalizerConfig: { node: { scope: { separator: ":" } } },\n    formatterConfig: { node: { context: { format: "compact" } } },\n  },\n);\n'})}),"\n",(0,o.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Parameter"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"message"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"RawMessage"})}),(0,o.jsx)(r.td,{children:"The main log message"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"meta"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"RawMeta"})}),(0,o.jsx)(r.td,{children:"Additional metadata"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"LogRuntimeOptions"})}),(0,o.jsx)(r.td,{children:"Runtime options for this log call"})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"logruntimeoptions",children:"LogRuntimeOptions"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Parameter"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"scope?"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"RawScope | string"})}),(0,o.jsx)(r.td,{children:"Scope(s) to categorize or filter logs"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"context?"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"RawContext"})}),(0,o.jsx)(r.td,{children:"Additional contextual information"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"normalizerConfig?"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"NormalizerConfig"})}),(0,o.jsx)(r.td,{children:"Configuration for normalizer"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"formatterConfig?"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"FormatterConfig"})}),(0,o.jsx)(r.td,{children:"Configuration for formatter"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>d});var t=n(6540);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);