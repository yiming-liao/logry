"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[863],{6264:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"architecture/overview","title":"Overview","description":"Logry is designed with a focus on console output as the primary logging target.","source":"@site/docs/architecture/overview.md","sourceDirName":"architecture","slug":"/architecture/overview","permalink":"/logry/docs/architecture/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/architecture/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/logry/docs/category/architecture"},"next":{"title":"Log Pipeline","permalink":"/logry/docs/architecture/log-pipeline"}}');var n=i(4848),o=i(8453);const s={sidebar_position:1,title:"Overview"},a=" Overview",c={},l=[];function d(e){const t={blockquote:"blockquote",br:"br",em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"-overview",children:[(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Smilies/Grey%20Heart.png",alt:"Grey Heart",width:"36",height:"36"})," Overview"]})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Logry"})," is designed with a focus on ",(0,n.jsx)(t.strong,{children:"console output"})," as the primary logging target.",(0,n.jsx)(t.br,{}),"\n","The Platform Transporter is tailored for each environment to efficiently handle core console output."]}),"\n",(0,n.jsxs)(t.p,{children:["Beyond console output, tasks like ",(0,n.jsx)(t.em,{children:"file writing"}),", ",(0,n.jsx)(t.em,{children:"remote logging"}),", or ",(0,n.jsx)(t.em,{children:"service integration"})," are handled by flexible, user-defined ",(0,n.jsx)(t.strong,{children:"Handlers"}),".",(0,n.jsx)(t.br,{}),"\n","This plugin-like architecture allows you to easily extend or customize logging behavior without affecting the main console pipeline."]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Party%20Popper.png",alt:"Party Popper",width:"20",height:"20"})," ",(0,n.jsxs)(t.em,{children:["Think of the Platform Transporter as the reliable frontman,",(0,n.jsx)(t.br,{}),"\n","while Handlers are the creative backstage crew adding all the magic."]})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This architecture ensures that:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"The console remains the central output, optimized for each platform\u2019s specifics."}),"\n",(0,n.jsx)(t.li,{children:"Other output destinations can be easily added or modified by introducing new Handlers."}),"\n",(0,n.jsx)(t.li,{children:"The system maintains consistency and reliability, while providing maximum flexibility to adapt to various use cases and environments."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var r=i(6540);const n={},o=r.createContext(n);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);