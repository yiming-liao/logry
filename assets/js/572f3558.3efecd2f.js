"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[604],{2511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"introduction/quick-start","title":"Quick Start","description":"Installation","source":"@site/docs/introduction/quick-start.md","sourceDirName":"introduction","slug":"/introduction/quick-start","permalink":"/logry/docs/introduction/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/introduction/quick-start.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Quick Start"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/logry/docs/introduction/getting-started"},"next":{"title":"Presets","permalink":"/logry/docs/introduction/presets"}}');var s=n(4848),o=n(8453);const i={sidebar_position:2,title:"Quick Start"},a=" Quick Start",l={},c=[{value:"Installation",id:"-installation",level:3},{value:"Using Static Logger Methods",id:"-using-static-logger-methods",level:3},{value:"Creating a Custom Logger Instance",id:"-creating-a-custom-logger-instance",level:3},{value:"Connect with the Outside World",id:"-connect-with-the-outside-world",level:3}];function d(e){const t={a:"a",br:"br",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"-quick-start",children:[(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Travel%20and%20places/Rocket.png",alt:"Rocket",width:"36",height:"36"})," Quick Start"]})}),"\n",(0,s.jsxs)(t.h3,{id:"-installation",children:[(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Symbols/Triangular%20Flag.png",alt:"Triangular Flag",width:"20",height:"20"})," Installation"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install logry\n"})}),"\n",(0,s.jsxs)(t.p,{children:["or use ",(0,s.jsx)(t.strong,{children:"yarn"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"yarn add logry\n"})}),"\n",(0,s.jsxs)(t.h3,{id:"-using-static-logger-methods",children:[(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Using Static Logger Methods"]}),"\n",(0,s.jsxs)(t.p,{children:["The easiest way to use ",(0,s.jsx)(t.strong,{children:"Logry"})," is by calling its static logging methods.",(0,s.jsx)(t.br,{}),"\n","They work instantly without a logger instance, ignore level restrictions, and default to the ",(0,s.jsx)(t.strong,{children:"\u201cpretty\u201d"})," preset for clean output"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { trace, debug, info, warn, error, fatal } from "logry";\n\ninfo("\ud83d\udc4b\ud83c\udffc Hi there! Welcome to Logry!");\n\nwarn("User session is about to expire", { user: "John Doe" }); // second argument is metadata (meta)\n\nerror("Unexpected error occurred", new Error("Something went wrong")); // you can also pass an Error\n'})}),"\n",(0,s.jsxs)(t.h3,{id:"-creating-a-custom-logger-instance",children:[(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Creating a Custom Logger Instance"]}),"\n",(0,s.jsxs)(t.p,{children:["You can create a logger by calling ",(0,s.jsx)(t.strong,{children:"logry()"}),".",(0,s.jsx)(t.br,{}),"\n","By default, the log level is set to ",(0,s.jsx)(t.strong,{children:'"warn"'}),", so only logs with levels ",(0,s.jsx)(t.strong,{children:'"warn"'}),", ",(0,s.jsx)(t.strong,{children:'"error"'}),", and ",(0,s.jsx)(t.strong,{children:'"fatal"'})," will be shown.",(0,s.jsx)(t.br,{}),"\n","If you don\u2019t specify an ID, the logger will use ",(0,s.jsx)(t.strong,{children:'"default"'})," as its identifier automatically."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { logry } from \"logry\";\n\n// Create a custom logger instance (defaults to id: 'default' and level: 'warn')\nconst logger = logry();\n\nlogger.info(\"User logged in\"); // \u274c This won't be shown, 'info' is lower than the default 'warn' level\n\nlogger.warn(\"User login warning\"); // \u2705 This will be shown\n"})}),"\n",(0,s.jsx)(t.p,{children:"A quick and easy setup to start logging right away:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { logry } from "logry";\n\nconst logger = logry({\n  id: "MyLogger",\n  level: "debug", // Will show: debug, info, warn, error, fatal (trace will be hidden)\n});\n'})}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsxs)("summary",{children:[" \u2728 ",(0,s.jsx)("strong",{children:"Want a more customized setup?"})]}),(0,s.jsx)(t.p,{children:"A fully customizable logger setup when you need more control and personality:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { logry } from "logry";\n\nconst logger = logry({\n  id: "\ud83c\udf10 My Logger",\n  level: "info",\n  scope: ["auth", "api"],\n  context: { env: "production", appVersion: "2.5.1" },\n  preset: "verbose", // "pretty" | "pretty-expanded" | "minimal" | "verbose"\n  normalizerConfig: {\n    node: {\n      timestamp: { style: "iso" },\n      // ...\n    },\n    browser: {\n      timestamp: { style: "pretty" },\n      // ...\n    },\n  },\n  formatterConfig: {\n    node: {\n      id: { ansiStyle: "\\x1b[35m" },\n      message: {\n        customFormatter: ({ fieldValue }) => ({\n          fieldValue: "\\n" + fieldValue.toUpperCase(),\n        }),\n      },\n      // ...\n    },\n    browser: {\n      id: { cssStyle: "color: purple;" },\n      context: { format: "compact" },\n      // ...\n    },\n  },\n  handlerManagerConfig: {\n    // ...\n  },\n});\n'})})]}),"\n",(0,s.jsxs)(t.h3,{id:"-connect-with-the-outside-world",children:[(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Joystick.png",alt:"Joystick",width:"25",height:"25"})," Connect with the Outside World"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Want to send your logs to files, Slack, or other services?"}),(0,s.jsx)(t.br,{}),"\n","Check out the ",(0,s.jsx)(t.a,{href:"/logry/docs/examples/handlers",children:"\u2728 Handlers & Integrations"})," to see how Logry integrates with real-world outputs."]})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(6540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);