"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[336],{3526:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/logry/docs/introduction/getting-started","docId":"introduction/getting-started","unlisted":false},{"type":"link","label":"Quick Start","href":"/logry/docs/introduction/quick-start","docId":"introduction/quick-start","unlisted":false},{"type":"link","label":"Presets","href":"/logry/docs/introduction/presets","docId":"introduction/presets","unlisted":false}]},{"type":"category","label":"Core Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Log Level","href":"/logry/docs/core-concepts/log-level","docId":"core-concepts/log-level","unlisted":false},{"type":"link","label":"Child Loggers","href":"/logry/docs/core-concepts/child-loggers","docId":"core-concepts/child-loggers","unlisted":false},{"type":"link","label":"Logger Core","href":"/logry/docs/core-concepts/logger-core","docId":"core-concepts/logger-core","unlisted":false},{"type":"link","label":"Handler Manager","href":"/logry/docs/core-concepts/handler-manager","docId":"core-concepts/handler-manager","unlisted":false}],"href":"/logry/docs/category/core-concepts"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/logry/docs/architecture/overview","docId":"architecture/overview","unlisted":false},{"type":"link","label":"Log Pipeline","href":"/logry/docs/architecture/log-pipeline","docId":"architecture/log-pipeline","unlisted":false},{"type":"link","label":"Transporter","href":"/logry/docs/architecture/transporter","docId":"architecture/transporter","unlisted":false},{"type":"link","label":"Normalizer","href":"/logry/docs/architecture/normalizer","docId":"architecture/normalizer","unlisted":false},{"type":"link","label":"Formatter","href":"/logry/docs/architecture/formatter","docId":"architecture/formatter","unlisted":false},{"type":"link","label":"Handlers","href":"/logry/docs/architecture/handlers","docId":"architecture/handlers","unlisted":false}],"href":"/logry/docs/category/architecture"},{"type":"category","label":"Debugging and Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Devtools","href":"/logry/docs/debugging-and-tools/devtools","docId":"debugging-and-tools/devtools","unlisted":false},{"type":"link","label":"Development Mode Detection","href":"/logry/docs/debugging-and-tools/development-mode-detection","docId":"debugging-and-tools/development-mode-detection","unlisted":false}],"href":"/logry/docs/category/debugging-and-tools"},{"type":"category","label":"\u2728 Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Example","href":"/logry/docs/examples/basic","docId":"examples/basic","unlisted":false},{"type":"link","label":"Using Presets","href":"/logry/docs/examples/presets","docId":"examples/presets","unlisted":false},{"type":"link","label":"Custom Formats","href":"/logry/docs/examples/custom-formats","docId":"examples/custom-formats","unlisted":false},{"type":"link","label":"\u2728 Handlers & Integrations","href":"/logry/docs/examples/handlers","docId":"examples/handlers","unlisted":false}],"href":"/logry/docs/category/-examples"},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"logry()","href":"/logry/docs/api-reference/logry","docId":"api-reference/logry","unlisted":false},{"type":"link","label":"Log Methods","href":"/logry/docs/api-reference/log-methods","docId":"api-reference/log-methods","unlisted":false},{"type":"link","label":"Normalizer Config","href":"/logry/docs/api-reference/normalizer-config","docId":"api-reference/normalizer-config","unlisted":false},{"type":"link","label":"Formatter Config","href":"/logry/docs/api-reference/formatter-config","docId":"api-reference/formatter-config","unlisted":false}],"href":"/logry/docs/category/api-reference"}]},"docs":{"api-reference/formatter-config":{"id":"api-reference/formatter-config","title":"Formatter Config","description":"FormatterConfig defines how each log field is styled and formatted per platform.","sidebar":"tutorialSidebar"},"api-reference/log-methods":{"id":"api-reference/log-methods","title":"Log Methods","description":"Common log methods available on the logger instance, such as fatal(), error(), warn(), info(), etc.","sidebar":"tutorialSidebar"},"api-reference/logry":{"id":"api-reference/logry","title":"logry()","description":"logry(options? UniversalLogger","sidebar":"tutorialSidebar"},"api-reference/normalizer-config":{"id":"api-reference/normalizer-config","title":"Normalizer Config","description":"NormalizerConfig is an object used to define per-platform normalization behavior.","sidebar":"tutorialSidebar"},"architecture/formatter":{"id":"architecture/formatter","title":"Formatter","description":"The Formatter takes normalized log data and turns it into readable, styled output.","sidebar":"tutorialSidebar"},"architecture/handlers":{"id":"architecture/handlers","title":"Handlers","description":"Handlers are modular units that define where_** and how_ a log should be delivered,","sidebar":"tutorialSidebar"},"architecture/log-pipeline":{"id":"architecture/log-pipeline","title":"Log Pipeline","description":"Building on the architecture described above,","sidebar":"tutorialSidebar"},"architecture/normalizer":{"id":"architecture/normalizer","title":"Normalizer","description":"Before any log is formatted, Logry first passes it through a platform-aware normalizer.","sidebar":"tutorialSidebar"},"architecture/overview":{"id":"architecture/overview","title":"Overview","description":"Logry is designed with a focus on console output as the primary logging target.","sidebar":"tutorialSidebar"},"architecture/transporter":{"id":"architecture/transporter","title":"Transporter","description":"When a log is passed to a Transporter, it flows through three clear stages:","sidebar":"tutorialSidebar"},"core-concepts/child-loggers":{"id":"core-concepts/child-loggers","title":"Child Loggers","description":"In Logry, every logger instance is lightweight and modular.","sidebar":"tutorialSidebar"},"core-concepts/handler-manager":{"id":"core-concepts/handler-manager","title":"Handler Manager","description":"Every Logger instance is paired with a dedicated HandlerManager,","sidebar":"tutorialSidebar"},"core-concepts/log-level":{"id":"core-concepts/log-level","title":"Log Level","description":"Logry supports seven log levels, ordered from most critical to most verbose:","sidebar":"tutorialSidebar"},"core-concepts/logger-core":{"id":"core-concepts/logger-core","title":"Logger Core","description":"The core engine responsible for managing log levels, shared identity (id), and optional configurations for formatting, normalization, and handlers.","sidebar":"tutorialSidebar"},"debugging-and-tools/development-mode-detection":{"id":"debugging-and-tools/development-mode-detection","title":"Development Mode Detection","description":"This function detects whether the runtime is in development mode.","sidebar":"tutorialSidebar"},"debugging-and-tools/devtools":{"id":"debugging-and-tools/devtools","title":"Devtools","description":"Logry includes small tools to help you debug and inspect logger internals.","sidebar":"tutorialSidebar"},"examples/basic":{"id":"examples/basic","title":"Basic Example","description":"This section provides basic usage examples of Logry across different environments including Node.js, Browser, and Edge.","sidebar":"tutorialSidebar"},"examples/custom-formats":{"id":"examples/custom-formats","title":"Custom Formats","description":"This section showcases Logry\'s powerful customization capabilities with advanced examples of custom log formats.","sidebar":"tutorialSidebar"},"examples/handlers":{"id":"examples/handlers","title":"\u2728 Handlers & Integrations","description":"This section demonstrates the versatile Handlers available in Logry, enabling you to extend logging beyond console output.","sidebar":"tutorialSidebar"},"examples/presets":{"id":"examples/presets","title":"Using Presets","description":"This section showcases various preset configurations of Logry for Node.js, Browser, and Edge environments.","sidebar":"tutorialSidebar"},"introduction/getting-started":{"id":"introduction/getting-started","title":"Getting Started","description":"Welcome to Logry \u2014","sidebar":"tutorialSidebar"},"introduction/presets":{"id":"introduction/presets","title":"Presets","description":"Logry offers several built-in logger presets.","sidebar":"tutorialSidebar"},"introduction/quick-start":{"id":"introduction/quick-start","title":"Quick Start","description":"Installation","sidebar":"tutorialSidebar"}}}}')}}]);