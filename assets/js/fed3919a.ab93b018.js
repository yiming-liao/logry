"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[135],{213:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"architecture/normalizer","title":"Normalizer","description":"Before any log is formatted, Logry first passes it through a platform-aware normalizer.","source":"@site/docs/architecture/normalizer.md","sourceDirName":"architecture","slug":"/architecture/normalizer","permalink":"/logry/docs/architecture/normalizer","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/architecture/normalizer.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Normalizer"},"sidebar":"tutorialSidebar","previous":{"title":"Transporter","permalink":"/logry/docs/architecture/transporter"},"next":{"title":"Formatter","permalink":"/logry/docs/architecture/formatter"}}');var i=t(4848),s=t(8453);const l={sidebar_position:4,title:"Normalizer"},o=" Normalizer",a={},c=[{value:"What it does",id:"-what-it-does",level:3},{value:"Customization",id:"-customization",level:3},{value:"Platform Awareness",id:"-platform-awareness",level:3}];function d(e){const r={blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsxs)(r.h1,{id:"-normalizer",children:[(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Symbols/Shuffle%20Tracks%20Button.png",alt:"Shuffle Tracks Button",width:"36",height:"36"})," Normalizer"]})}),"\n",(0,i.jsxs)(r.p,{children:["Before any log is formatted, ",(0,i.jsx)(r.strong,{children:"Logry"})," first passes it through a platform-aware normalizer.",(0,i.jsx)(r.br,{}),"\n","This process ensures a consistent structure, reliable data types, and full flexibility for customization."]}),"\n",(0,i.jsxs)(r.h3,{id:"-what-it-does",children:[(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," What it does"]}),"\n",(0,i.jsx)(r.p,{children:"The Normalizer transforms a raw log payload into a normalized shape, handling core fields like:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"timestamp"}),"\n",(0,i.jsx)(r.li,{children:"id"}),"\n",(0,i.jsx)(r.li,{children:"level"}),"\n",(0,i.jsx)(r.li,{children:"scope"}),"\n",(0,i.jsx)(r.li,{children:"message"}),"\n",(0,i.jsx)(r.li,{children:"meta"}),"\n",(0,i.jsx)(r.li,{children:"context"}),"\n",(0,i.jsxs)(r.li,{children:["pid ",(0,i.jsxs)("sub",{children:["(",(0,i.jsx)(r.em,{children:"Node.js only"}),")"]})]}),"\n",(0,i.jsxs)(r.li,{children:["hostname ",(0,i.jsxs)("sub",{children:["(",(0,i.jsx)(r.em,{children:"Node.js only"}),")"]})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Each field has a dedicated normalizer, all of which can be overridden via custom logic."}),"\n",(0,i.jsxs)(r.h3,{id:"-customization",children:[(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Customization"]}),"\n",(0,i.jsxs)(r.p,{children:["Every normalizer supports a ",(0,i.jsx)(r.strong,{children:"customNormalizer"})," function, letting you override default behavior:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'id: {\n  customNormalizer: ({ fieldValue, raw }) => `node-${fieldValue}`, // e.g., "default" \u2192 "node-default"\n  // fieldValue: the original value for the "id" field\n  // raw: a snapshot of the full raw payload before any normalization\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:"You can also fine-tune behavior using extra options per field."}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Extra Options Available"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"timestamp"})}),(0,i.jsx)(r.td,{children:"style, useUTC, showTimeOnly"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"level"})}),(0,i.jsx)(r.td,{children:"style"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"scope"})}),(0,i.jsx)(r.td,{children:"separator"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"meta"})}),(0,i.jsx)(r.td,{children:"errorStackLines"})]})]})]}),"\n",(0,i.jsxs)(r.h3,{id:"-platform-awareness",children:[(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Platform Awareness"]}),"\n",(0,i.jsxs)(r.p,{children:["Normalization logic in Logry adapts based on the runtime environment,",(0,i.jsx)(r.br,{}),"\n","allowing logs to be tailored specifically for Node.js or Browser contexts."]}),"\n",(0,i.jsx)(r.p,{children:"For example:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Timestamps appear as full ISO 8601 UTC strings in Node, but as simplified human-readable strings in the browser."}),"\n"]}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:["You can define environment-specific behavior using the normalizerConfig structure.",(0,i.jsx)(r.br,{}),"\n","It can be set globally in ",(0,i.jsx)(r.strong,{children:"logry(...)"}),", scoped to a ",(0,i.jsx)(r.strong,{children:"logger.child(...)"}),", or ",(0,i.jsx)(r.strong,{children:"overridden per log method"}),":"]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'const logger = logry({\n  // ...\n  normalizerConfig: {\n    node: {\n      timestamp: {\n        style: "iso", // Use full ISO format for timestamp in Node.js\n        useUTC: true, // Display timestamp in UTC timezone\n      },\n      level: {\n        style: "upper", // Show log level in uppercase (e.g., "ERROR")\n      },\n      meta: {\n        errorStackLines: 10, // Limit error stack trace to 10 lines\n      },\n    },\n    browser: {\n      timestamp: {\n        style: "pretty", // Use a more human-friendly timestamp format in browsers\n        useUTC: false, // Display timestamp in local timezone\n      },\n      level: {\n        style: "lower", // Show log level in lowercase (e.g., "error")\n      },\n    },\n  },\n  // ...\n});\n'})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>o});var n=t(6540);const i={},s=n.createContext(i);function l(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);