"use strict";(self.webpackChunklogry_doc=self.webpackChunklogry_doc||[]).push([[512],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const a={},t=r.createContext(a);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},9138:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"architecture/handlers","title":"Handlers","description":"Handlers are modular units that define where_** and how_ a log should be delivered,","source":"@site/docs/architecture/handlers.md","sourceDirName":"architecture","slug":"/architecture/handlers","permalink":"/logry/docs/architecture/handlers","draft":false,"unlisted":false,"editUrl":"https://github.com/yiming-liao/logry/edit/main/website/docs/architecture/handlers.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Handlers"},"sidebar":"tutorialSidebar","previous":{"title":"Formatter","permalink":"/logry/docs/architecture/formatter"},"next":{"title":"Debugging and Tools","permalink":"/logry/docs/category/debugging-and-tools"}}');var a=s(4848),t=s(8453);const l={sidebar_position:6,title:"Handlers"},o=" Handlers",d={},i=[{value:"Creating Custom Handlers with BaseHandler",id:"-creating-custom-handlers-with-basehandler",level:3},{value:"Platform-Specific Handlers",id:"-platform-specific-handlers",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"-handlers",children:[(0,a.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Joystick.png",alt:"Joystick",width:"36",height:"36"})," Handlers"]})}),"\n",(0,a.jsxs)(n.p,{children:["Handlers are modular units that define ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.em,{children:"where"})})," and ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.em,{children:"how"})})," a log should be delivered,",(0,a.jsx)(n.br,{}),"\n","whether to a console, file, or third-party service."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"They let a single logger send logs to multiple destinations simultaneously, managed smoothly behind the scenes."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"\ud83d\udca1 Handlers receive the raw log payload and process it asynchronously, enabling efficient, non-blocking log delivery."}),"\n",(0,a.jsx)(n.p,{children:"You can add or remove handlers dynamically at runtime::"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"logger.addHandler(handler, id?, position?); // Adds a handler, returns the assigned ID\nlogger.removeHandler(id); // Removes the handler by ID\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Want to see Handlers in action?"}),(0,a.jsx)(n.br,{}),"\n","Check out the ",(0,a.jsx)(n.a,{href:"/logry/docs/examples/handlers",children:"\u2728 Handlers & Integrations"})," for practical code samples and integration tips."]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"-creating-custom-handlers-with-basehandler",children:[(0,a.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Creating Custom Handlers with BaseHandler"]}),"\n",(0,a.jsxs)(n.p,{children:["You can create custom handlers ",(0,a.jsx)(n.em,{children:"from scratch"})," by implementing your own ",(0,a.jsx)(n.code,{children:"handle()"})," method,",(0,a.jsx)(n.br,{}),"\n","or ",(0,a.jsx)(n.strong,{children:"extend"})," Logry\u2019s built-in ",(0,a.jsx)(n.strong,{children:"BaseHandler"})," to simplify the process."]}),"\n",(0,a.jsxs)(n.p,{children:["\ud83e\uddf1 ",(0,a.jsx)(n.strong,{children:"BaseHandler"})," provides core functionalities such as payload ",(0,a.jsx)(n.strong,{children:"normalization"}),", ",(0,a.jsx)(n.strong,{children:"formatting"}),", and ",(0,a.jsx)(n.strong,{children:"JSON serialization"}),",",(0,a.jsx)(n.br,{}),"\n","plus a safe execution flow, so you only need to focus on implementing the actual log delivery logic."]}),"\n",(0,a.jsx)(n.p,{children:"The key method to implement is:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"abstract handle(rawPayload: RawPayload): Promise<void>;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Here are some useful protected methods you can use inside your custom handler:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Method"}),(0,a.jsx)(n.th,{children:"Signature"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"normalize"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(rawPayload: RawPayload) => NormalizedPayload"})}),(0,a.jsx)(n.td,{children:"Normalize the raw log payload into a consistent format."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"format"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(normalized: NormalizedPayload) => FormattedPayload"})}),(0,a.jsx)(n.td,{children:"Format the normalized payload into a human-readable or styled format."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"toJson"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"(rawPayload: RawPayload, options?: { useNormalizer?: boolean; space?: number }) => string"})}),(0,a.jsx)(n.td,{children:"Convert the raw payload into a JSON string, optionally normalized and pretty-printed."})]})]})]}),"\n",(0,a.jsx)(n.p,{children:"Example implementation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'import { NodeHandler } from "logry/handlers"; // \ud83d\udce6 Use built-in base handlers from the "logry/handlers" module.\n\nclass MyCustomHandler extends BaseHandler {\n  async handle(rawPayload: RawPayload) {\n    const normalized = this.normalize(rawPayload);\n    const formatted = this.format(normalized);\n    const message = `${formatted.level} | ${formatted.message}`;\n    // Or for JSON output: const message = this.toJson(rawPayload)\n    await sendToExternalService(message);\n  }\n}\n\nlogger.addHandler(new MyCustomHandler()); // Register the custom handler\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"-platform-specific-handlers",children:[(0,a.jsx)("img",{src:"https://raw.githubusercontent.com/Tarikul-Islam-Anik/Animated-Fluent-Emojis/master/Emojis/Activities/Sparkles.png",alt:"Sparkles",width:"20",height:"20"})," Platform-Specific Handlers"]}),"\n",(0,a.jsx)(n.p,{children:"For more advanced scenarios, you can extend platform-specific base classes such as:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"NodeHandler"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"BrowserHandler"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"EdgeHandler"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["These classes build upon ",(0,a.jsx)(n.strong,{children:"BaseHandler"}),", and additionally expose a platform-optimized ",(0,a.jsx)(n.code,{children:"compose()"})," method\nthat helps you generate the final log message string based on your formatter config and platform constraints."]}),"\n",(0,a.jsx)(n.p,{children:"Example implementation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'import { NodeHandler } from "logry/handlers"; // \ud83d\udce6 Use built-in base handlers from the "logry/handlers" module.\n\nclass MyCustomHandler extends NodeHandler {\n  async handle(rawPayload: RawPayload) {\n    const message = await this.compose(payload); // Async only in Node.js to append pid and hostname\n    await sendToExternalService(message);\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["This makes it easy to build reliable and composable handlers,",(0,a.jsx)(n.br,{}),"\n","whether you write files, send to remote servers, or push logs to cloud ingestion pipelines \u2601\ufe0f"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);